"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from django.urls import reverse_lazy

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

LOG_DIR = os.path.join(BASE_DIR, 'logs')
os.makedirs(LOG_DIR, exist_ok=True)

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "{levelname} {asctime} {module}:{lineno} {name} {message}",
            "style": "{",
        },
    },
    "handlers": {
        "file": {
            "level": "INFO",
            "class": "logging.handlers.TimedRotatingFileHandler",
            "filename": os.path.join(LOG_DIR, "django.log"),
            "when": "midnight",
            "interval": 1,
            "backupCount": 7,
            "formatter": "verbose",
            "delay": True
        },
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "verbose",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["file", "console"],
            "level": "INFO",
            "propagate": True,
        },
        "apps": {
            "handlers": ["file", "console"],
            "level": "DEBUG",
            "propagate": False,
        },
    },
    "root": {
        "handlers": ["file", "console"],
        "level": "INFO",
    },
}


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-mb-i2=x8iko0222a*=w$c*-jj$=xfz=)&79$v77g2nb_11#8ig'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'unfold',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # apps
    'apps.dashboard',
    'apps.movie',

    #extensions
    'django_extensions'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 'DIRS': [],
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                # global variables
                'apps.movie.context_processors.global_variables',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Unfold admin theme settings
UNFOLD = {
    "SITE_TITLE": os.getenv("APP_NAME", "MOVIESFLIX"),
    "SITE_HEADER": os.getenv("COMPANY_NAME", "MOVIESFLIX"),
    "SITE_SUBHEADER": "MOVIESFLIX",
    "SITE_INDEX_TITLE": "Movie",
    "SITE_SYMBOL": "speed",
    "SHOW_BACK_BUTTON": True,
    "DASHBOARD_CALLBACK": "apps.dashboard.views.dashboard_callback",
    # "SITE_ICON": {
    #     "light": lambda request: "/static/logo-light.svg",
    #     "dark": lambda request: "/static/logo-dark.svg",
    # },
    "COLORS": {
        "primary": {
            "50": "250 245 255",
            "100": "243 232 255",
            "200": "233 213 255",
            "300": "216 180 254",
            "400": "192 132 252",
            "500": "168 85 247",
            "600": "147 51 234",
            "700": "126 34 206",
            "800": "107 33 168",
            "900": "88 28 135",
        },
    },
    "EXTENSIONS": {
        "modeltranslation": {
            "flags": {
                "en": "ðŸ‡¬ðŸ‡§",
                "fr": "ðŸ‡«ðŸ‡·",
                "nl": "ðŸ‡³ðŸ‡±",
            },
        },
    },
    "SIDEBAR": {
    "show_search": False,
    "show_all_applications": False,
    "navigation": [
         {
                "items": [
                    {
                        "title": "DASHBOARD",
                        "icon": "dashboard",
                        "link": reverse_lazy("admin:index"),
                    },
                ]
            },
        {
            "title": "Custom Section",
            "collapsible": False,
            "separator": True,
            "items": [
                {
                    "title": "Movies",
                    "icon": "movie_filter",
                    "link": reverse_lazy("admin:movie_movie_changelist"),
                    "permission": lambda request: request.user.has_perm("movie.view_movie"),

                },
                {
                    "title": "Watchlist",
                    "icon": "list",
                    "link": reverse_lazy("admin:movie_watchlist_changelist"),
                    "permission": lambda request: request.user.has_perm("movie.view_watchlist"),
                },
                {
                    "title": "Genres",
                    "icon": "category",
                    "link": reverse_lazy("admin:movie_genre_changelist"),
                    "permission": lambda request: request.user.has_perm("movie.view_genre"),
                },
            ],
        },

        {
            "title": "Accounts",
            "collapsible": True,
            "items": [
                {
                    "title": "Users",
                    "icon": "people",
                    "link": reverse_lazy("admin:auth_user_changelist"),
                    "permission": lambda request: request.user.has_perm("auth.view_user"),
                },
            ]
        },
    ],
},
}


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

STATIC_ROOT = BASE_DIR / 'staticfiles'


STATICFILES_DIRS = [BASE_DIR / 'static']

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'